// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `iGuiHub.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace MCS
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface GuiDataHub : Ice.Object, GuiDataHubOperations_, GuiDataHubOperationsNC_
    {
    }
}

namespace MCS
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GuiDataHub_Login(int ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GuiDataHub_Logout(int ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GuiDataHub_ReadData(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GuiDataHub_WriteData(int ret__);
}

namespace MCS
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GuiDataHubPrx : Ice.ObjectPrx
    {
        int Login(string user, string pass);
        int Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<MCS.Callback_GuiDataHub_Login> begin_Login(string user, string pass);
        Ice.AsyncResult<MCS.Callback_GuiDataHub_Login> begin_Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_Login(string user, string pass, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_Login(Ice.AsyncResult r__);

        int Logout(int session);
        int Logout(int session, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<MCS.Callback_GuiDataHub_Logout> begin_Logout(int session);
        Ice.AsyncResult<MCS.Callback_GuiDataHub_Logout> begin_Logout(int session, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_Logout(int session, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_Logout(int session, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_Logout(Ice.AsyncResult r__);

        string ReadData(string Tag, int session);
        string ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<MCS.Callback_GuiDataHub_ReadData> begin_ReadData(string Tag, int session);
        Ice.AsyncResult<MCS.Callback_GuiDataHub_ReadData> begin_ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_ReadData(string Tag, int session, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_ReadData(Ice.AsyncResult r__);

        int WriteData(string Tag, string Val, int session);
        int WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<MCS.Callback_GuiDataHub_WriteData> begin_WriteData(string Tag, string Val, int session);
        Ice.AsyncResult<MCS.Callback_GuiDataHub_WriteData> begin_WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_WriteData(string Tag, string Val, int session, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_WriteData(Ice.AsyncResult r__);
    }
}

namespace MCS
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GuiDataHubOperations_
    {
        int Login(string user, string pass, Ice.Current current__);

        int Logout(int session, Ice.Current current__);

        string ReadData(string Tag, int session, Ice.Current current__);

        int WriteData(string Tag, string Val, int session, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GuiDataHubOperationsNC_
    {
        int Login(string user, string pass);

        int Logout(int session);

        string ReadData(string Tag, int session);

        int WriteData(string Tag, string Val, int session);
    }
}

namespace MCS
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GuiDataHubPrxHelper : Ice.ObjectPrxHelperBase, GuiDataHubPrx
    {
        #region Synchronous operations

        public int Login(string user, string pass)
        {
            return Login(user, pass, null, false);
        }

        public int Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return Login(user, pass, context__, true);
        }

        private int Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("Login");
                    delBase__ = getDelegate__(false);
                    GuiDataHubDel_ del__ = (GuiDataHubDel_)delBase__;
                    return del__.Login(user, pass, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public int Logout(int session)
        {
            return Logout(session, null, false);
        }

        public int Logout(int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return Logout(session, context__, true);
        }

        private int Logout(int session, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("Logout");
                    delBase__ = getDelegate__(false);
                    GuiDataHubDel_ del__ = (GuiDataHubDel_)delBase__;
                    return del__.Logout(session, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string ReadData(string Tag, int session)
        {
            return ReadData(Tag, session, null, false);
        }

        public string ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return ReadData(Tag, session, context__, true);
        }

        private string ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("ReadData");
                    delBase__ = getDelegate__(false);
                    GuiDataHubDel_ del__ = (GuiDataHubDel_)delBase__;
                    return del__.ReadData(Tag, session, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public int WriteData(string Tag, string Val, int session)
        {
            return WriteData(Tag, Val, session, null, false);
        }

        public int WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return WriteData(Tag, Val, session, context__, true);
        }

        private int WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("WriteData");
                    delBase__ = getDelegate__(false);
                    GuiDataHubDel_ del__ = (GuiDataHubDel_)delBase__;
                    return del__.WriteData(Tag, Val, session, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_Login> begin_Login(string user, string pass)
        {
            return begin_Login(user, pass, null, false, null, null);
        }

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_Login> begin_Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_Login(user, pass, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_Login(string user, string pass, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Login(user, pass, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Login(user, pass, ctx__, true, cb__, cookie__);
        }

        private const string __Login_name = "Login";

        public int end_Login(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __Login_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            int ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readInt();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<MCS.Callback_GuiDataHub_Login> begin_Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__Login_name);
            IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_Login> result__ =  new IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_Login>(this, __Login_name, Login_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__Login_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(user);
                os__.writeString(pass);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void Login_completed__(Ice.AsyncResult r__, MCS.Callback_GuiDataHub_Login cb__, Ice.ExceptionCallback excb__)
        {
            int ret__;
            try
            {
                ret__ = end_Login(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_Logout> begin_Logout(int session)
        {
            return begin_Logout(session, null, false, null, null);
        }

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_Logout> begin_Logout(int session, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_Logout(session, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_Logout(int session, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Logout(session, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_Logout(int session, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Logout(session, ctx__, true, cb__, cookie__);
        }

        private const string __Logout_name = "Logout";

        public int end_Logout(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __Logout_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            int ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readInt();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<MCS.Callback_GuiDataHub_Logout> begin_Logout(int session, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__Logout_name);
            IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_Logout> result__ =  new IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_Logout>(this, __Logout_name, Logout_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__Logout_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeInt(session);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void Logout_completed__(Ice.AsyncResult r__, MCS.Callback_GuiDataHub_Logout cb__, Ice.ExceptionCallback excb__)
        {
            int ret__;
            try
            {
                ret__ = end_Logout(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_ReadData> begin_ReadData(string Tag, int session)
        {
            return begin_ReadData(Tag, session, null, false, null, null);
        }

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_ReadData> begin_ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_ReadData(Tag, session, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_ReadData(string Tag, int session, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_ReadData(Tag, session, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_ReadData(Tag, session, ctx__, true, cb__, cookie__);
        }

        private const string __ReadData_name = "ReadData";

        public string end_ReadData(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __ReadData_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<MCS.Callback_GuiDataHub_ReadData> begin_ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__ReadData_name);
            IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_ReadData> result__ =  new IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_ReadData>(this, __ReadData_name, ReadData_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__ReadData_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(Tag);
                os__.writeInt(session);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void ReadData_completed__(Ice.AsyncResult r__, MCS.Callback_GuiDataHub_ReadData cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_ReadData(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_WriteData> begin_WriteData(string Tag, string Val, int session)
        {
            return begin_WriteData(Tag, Val, session, null, false, null, null);
        }

        public Ice.AsyncResult<MCS.Callback_GuiDataHub_WriteData> begin_WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_WriteData(Tag, Val, session, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_WriteData(string Tag, string Val, int session, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_WriteData(Tag, Val, session, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_WriteData(Tag, Val, session, ctx__, true, cb__, cookie__);
        }

        private const string __WriteData_name = "WriteData";

        public int end_WriteData(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __WriteData_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            int ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readInt();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<MCS.Callback_GuiDataHub_WriteData> begin_WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__WriteData_name);
            IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_WriteData> result__ =  new IceInternal.TwowayOutgoingAsync<MCS.Callback_GuiDataHub_WriteData>(this, __WriteData_name, WriteData_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__WriteData_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(Tag);
                os__.writeString(Val);
                os__.writeInt(session);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void WriteData_completed__(Ice.AsyncResult r__, MCS.Callback_GuiDataHub_WriteData cb__, Ice.ExceptionCallback excb__)
        {
            int ret__;
            try
            {
                ret__ = end_WriteData(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static GuiDataHubPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GuiDataHubPrx r = b as GuiDataHubPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                GuiDataHubPrxHelper h = new GuiDataHubPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GuiDataHubPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            GuiDataHubPrx r = b as GuiDataHubPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                GuiDataHubPrxHelper h = new GuiDataHubPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GuiDataHubPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    GuiDataHubPrxHelper h = new GuiDataHubPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GuiDataHubPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    GuiDataHubPrxHelper h = new GuiDataHubPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GuiDataHubPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GuiDataHubPrx r = b as GuiDataHubPrx;
            if(r == null)
            {
                GuiDataHubPrxHelper h = new GuiDataHubPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GuiDataHubPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            GuiDataHubPrxHelper h = new GuiDataHubPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Ice::Object",
            "::MCS::GuiDataHub"
        };

        public static string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new GuiDataHubDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new GuiDataHubDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, GuiDataHubPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static GuiDataHubPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                GuiDataHubPrxHelper result = new GuiDataHubPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace MCS
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GuiDataHubDel_ : Ice.ObjectDel_
    {
        int Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> context__);

        int Logout(int session, _System.Collections.Generic.Dictionary<string, string> context__);

        string ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> context__);

        int WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> context__);
    }
}

namespace MCS
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GuiDataHubDelM_ : Ice.ObjectDelM_, GuiDataHubDel_
    {
        public int Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("Login", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(user);
                    os__.writeString(pass);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    int ret__;
                    ret__ = is__.readInt();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public int Logout(int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("Logout", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeInt(session);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    int ret__;
                    ret__ = is__.readInt();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("ReadData", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(Tag);
                    os__.writeInt(session);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public int WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("WriteData", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(Tag);
                    os__.writeString(Val);
                    os__.writeInt(session);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    int ret__;
                    ret__ = is__.readInt();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace MCS
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GuiDataHubDelD_ : Ice.ObjectDelD_, GuiDataHubDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public int Login(string user, string pass, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "Login", Ice.OperationMode.Idempotent, context__);
            int result__ = 0;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GuiDataHub servant__ = null;
                try
                {
                    servant__ = (GuiDataHub)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.Login(user, pass, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public int Logout(int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "Logout", Ice.OperationMode.Idempotent, context__);
            int result__ = 0;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GuiDataHub servant__ = null;
                try
                {
                    servant__ = (GuiDataHub)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.Logout(session, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string ReadData(string Tag, int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "ReadData", Ice.OperationMode.Idempotent, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GuiDataHub servant__ = null;
                try
                {
                    servant__ = (GuiDataHub)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.ReadData(Tag, session, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public int WriteData(string Tag, string Val, int session, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "WriteData", Ice.OperationMode.Idempotent, context__);
            int result__ = 0;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GuiDataHub servant__ = null;
                try
                {
                    servant__ = (GuiDataHub)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.WriteData(Tag, Val, session, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }
    }
}

namespace MCS
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class GuiDataHubDisp_ : Ice.ObjectImpl, GuiDataHub
    {
        #region Slice operations

        public int Login(string user, string pass)
        {
            return Login(user, pass, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int Login(string user, string pass, Ice.Current current__);

        public int Logout(int session)
        {
            return Logout(session, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int Logout(int session, Ice.Current current__);

        public string ReadData(string Tag, int session)
        {
            return ReadData(Tag, session, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string ReadData(string Tag, int session, Ice.Current current__);

        public int WriteData(string Tag, string Val, int session)
        {
            return WriteData(Tag, Val, session, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int WriteData(string Tag, string Val, int session, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Ice::Object",
            "::MCS::GuiDataHub"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[1];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[1];
        }

        public static new string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus Login___(GuiDataHub obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string user;
            user = is__.readString();
            string pass;
            pass = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            int ret__ = obj__.Login(user, pass, current__);
            os__.writeInt(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus Logout___(GuiDataHub obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            int session;
            session = is__.readInt();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            int ret__ = obj__.Logout(session, current__);
            os__.writeInt(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus ReadData___(GuiDataHub obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string Tag;
            Tag = is__.readString();
            int session;
            session = is__.readInt();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.ReadData(Tag, session, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus WriteData___(GuiDataHub obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string Tag;
            Tag = is__.readString();
            string Val;
            Val = is__.readString();
            int session;
            session = is__.readInt();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            int ret__ = obj__.WriteData(Tag, Val, session, current__);
            os__.writeInt(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "Login",
            "Logout",
            "ReadData",
            "WriteData",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Login___(this, inS__, current__);
                }
                case 1:
                {
                    return Logout___(this, inS__, current__);
                }
                case 2:
                {
                    return ReadData___(this, inS__, current__);
                }
                case 3:
                {
                    return WriteData___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 5:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 6:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type MCS::GuiDataHub was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type MCS::GuiDataHub was not generated with stream support";
            throw ex;
        }

        #endregion
    }
}
